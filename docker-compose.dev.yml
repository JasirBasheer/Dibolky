services:
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    sysctls:
      - net.ipv6.conf.all.disable_ipv6=1
    dns:
      - 8.8.8.8
      - 8.8.4.4
    restart: unless-stopped
    env_file: ./backend/.env
    volumes:
      - ./backend:/app
      - /app/node_modules
    ports:
      - "5050:5050"
    environment:
      NODE_ENV: development
      MONGODB_DEBUG: true
      LOGSTASH_HOST: logstash
      HOSTNAME: mern-backend
    networks:
      dibolky-tool:
        aliases:
          - backend
    depends_on:
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:5050/api/health"]
      interval: 90s
      timeout: 10s
      retries: 3
      start_period: 90s
    logging:
      driver: "gelf"
      options:
        gelf-address: "udp://172.19.0.5:12201"  
        tag: "backend"
        gelf-compression-type: "none"

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    restart: unless-stopped
    volumes:
      - ./frontend:/app
      - /app/node_modules
    ports:
      - "5173:5173"
    environment: 
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING=true
    networks:
      dibolky-tool:
        aliases:
          - frontend
    stdin_open: true
    tty: true

  redis:
    image: redis:alpine
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      dibolky-tool:
        aliases:
          - redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

networks:
  dibolky-tool:
    driver: bridge
    name: dibolky-tool

volumes:
  redis_data:
    driver: local
  es_data:
    driver: local